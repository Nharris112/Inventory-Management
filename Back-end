from flask import Flask, request, jsonify
from flask_cors import CORS
import sqlite3

# Initialize Flask app
app = Flask(__name__)
CORS(app)  # Enable CORS for all routes

# SQLite database file
DB_FILE = "inventory.db"

# Create the database and table if not exists
def init_db():
    with sqlite3.connect(DB_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS Items (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                category TEXT,
                quantity INTEGER NOT NULL CHECK (quantity >= 0),
                price REAL NOT NULL CHECK (price >= 0)
            )
        ''')
        conn.commit()

init_db()

# Route: Get all items
@app.route('/items', methods=['GET'])
def get_items():
    with sqlite3.connect(DB_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM Items')
        items = cursor.fetchall()
    return jsonify([{
        "id": item[0],
        "name": item[1],
        "category": item[2],
        "quantity": item[3],
        "price": item[4]
    } for item in items])

# Route: Add a new item
@app.route('/items', methods=['POST'])
def add_item():
    data = request.json
    name = data.get("name")
    category = data.get("category")
    quantity = data.get("quantity")
    price = data.get("price")

    with sqlite3.connect(DB_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute('''
            INSERT INTO Items (name, category, quantity, price)
            VALUES (?, ?, ?, ?)
        ''', (name, category, quantity, price))
        conn.commit()
    return jsonify({"message": "Item added successfully!"}), 201

# Route: Delete an item
@app.route('/items/<int:item_id>', methods=['DELETE'])
def delete_item(item_id):
    with sqlite3.connect(DB_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute('DELETE FROM Items WHERE id = ?', (item_id,))
        conn.commit()
    return jsonify({"message": "Item deleted successfully!"})

if __name__ == '__main__':
    app.run(debug=True)
